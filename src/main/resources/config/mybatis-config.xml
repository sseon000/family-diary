<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD SQL Map Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<setting name="cacheEnabled" value="true" />               <!-- 설정에서 각 매퍼에 설정된 캐시를 전역적으로 사용할지 말지에 대한 여부 -->
		<setting name="lazyLoadingEnabled" value="false"/>         <!-- 지연로딩을 사용할지에 대한 여부. 사용하지 않는다면 모두 즉시 로딩할 것이다. 이 값은 fetchType 속성을 사용해서 대체가능 -->
	    <setting name="multipleResultSetsEnabled" value="true"/>   <!-- 한 개의 구문에서 여러 개의 ResultSet을 허용할지의 여부(드라이버가 해당 기능을 지원해야 함) -->
	    <setting name="defaultExecutorType" value="SIMPLE"/>       <!-- 디폴트 실행자(executor) 설정. SIMPLE 실행자는 특별히 하는 것이 없다. REUSE 실행자는 PreparedStatement를 재사용한다. BATCH 실행자는 구문을 재사용하고 수정을 배치처리 [ SIMPLE REUSE BATCH ] -->
	    <setting name="jdbcTypeForNull" value="VARCHAR"/>          <!-- JDBC타입을 파라미터에 제공하지 않을때 null값을 처리한 JDBC타입을 명시한다. 일부 드라이버는 칼럼의 JDBC타입을 정의하도록 요구하지만 대부분은 NULL, VARCHAR 나 OTHER 처럼 일반적인 값을 사용해서 동작 [ JdbcType 이늄. 대부분은 NULL, VARCHAR 나 OTHER 를 공통적으로 사용한다. ] -->
	    <setting name="callSettersOnNulls" value="true"/>          <!-- 가져온 값이 null일 때 setter나 맵의 put 메소드를 호출할지를 명시 Map.keySet() 이나 null값을 초기화할때 유용하다. int, boolean 등과 같은 원시타입은 null을 설정할 수 없다는 점은 알아두면 좋다. -->
	    <setting name="defaultFetchSize" value="500"/>             <!-- 조회결과를 가져올때 가져올 데이터 크기를 제어하는 용도로 드라이버에 힌트를 설정 이 파라미터값은 쿼리 설정으로 변경할 수 있다. [ 양수 ]-->
	    <setting name="mapUnderscoreToCamelCase" value="true"/>    <!-- 전통적인 데이터베이스 칼럼명 형태인 A_COLUMN을 CamelCase형태의 자바 프로퍼티명 형태인 aColumn으로 자동으로 매핑하도록 함 -->
	</settings>
	
	<typeAliases>
  		<typeAlias alias="DiaryDto" type="com.fsje.dairy.dto.DiaryDto"/>
  		<typeAlias alias="FileDto" type="com.fsje.dairy.dto.FileDto"/>
  		<typeAlias alias="UserDto" type="com.fsje.dairy.dto.UserDto"/>
	</typeAliases>
</configuration>